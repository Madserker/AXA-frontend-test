{"version":3,"file":"DetailsList.Grouped.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.Grouped.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["// @codepen\r\n\r\nimport * as React from 'react';\r\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { IDetailsList, DetailsList, IColumn, IGroup } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { Toggle, IToggleStyles } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst margin = '0 20px 20px 0';\r\nconst controlWrapperClass = mergeStyles({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  flexWrap: 'wrap'\r\n});\r\nconst toggleStyles: Partial<IToggleStyles> = {\r\n  label: { display: 'inline-block', marginLeft: '10px', marginBottom: '3px' },\r\n  root: { display: 'flex', flexDirection: 'row-reverse', alignItems: 'center', margin: margin }\r\n};\r\n\r\nexport interface IDetailsListGroupedExampleItem {\r\n  key: string;\r\n  name: string;\r\n  color: string;\r\n}\r\n\r\nconst _columns: IColumn[] = [\r\n  {\r\n    key: 'name',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: 'color',\r\n    name: 'Color',\r\n    fieldName: 'color',\r\n    minWidth: 100,\r\n    maxWidth: 200\r\n  }\r\n];\r\n// NOTE: If changing these, also change the initial definition of state.groups below\r\nconst _initialRedIndex = 0;\r\nconst _initialRedCount = 2;\r\nconst _initialGreenIndex = 2;\r\nconst _initialGreenCount = 0;\r\nconst _initialBlueIndex = 2;\r\nconst _initialBlueCount = 3;\r\nconst _items: IDetailsListGroupedExampleItem[] = [\r\n  {\r\n    key: 'a',\r\n    name: 'a',\r\n    color: 'red'\r\n  },\r\n  {\r\n    key: 'b',\r\n    name: 'b',\r\n    color: 'red'\r\n  },\r\n  {\r\n    key: 'c',\r\n    name: 'c',\r\n    color: 'blue'\r\n  },\r\n  {\r\n    key: 'd',\r\n    name: 'd',\r\n    color: 'blue'\r\n  },\r\n  {\r\n    key: 'e',\r\n    name: 'e',\r\n    color: 'blue'\r\n  }\r\n];\r\n\r\nexport interface IDetailsListGroupedExampleState {\r\n  items: IDetailsListGroupedExampleItem[];\r\n  groups: IGroup[];\r\n  showItemIndexInView: boolean;\r\n  isCompactMode: boolean;\r\n}\r\nconst _blueGroupIndex = 2;\r\n\r\nexport class DetailsListGroupedExample extends BaseComponent<{}, IDetailsListGroupedExampleState> {\r\n  private _root = React.createRef<IDetailsList>();\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: _items,\r\n      // This is based on the definition of _items\r\n      groups: [\r\n        {\r\n          key: 'groupred0',\r\n          name: 'Color: \"red\"',\r\n          startIndex: _initialRedIndex,\r\n          count: _initialRedCount\r\n        },\r\n        {\r\n          key: 'groupgreen2',\r\n          name: 'Color: \"green\"',\r\n          startIndex: _initialGreenIndex,\r\n          count: _initialGreenCount\r\n        },\r\n        {\r\n          key: 'groupblue2',\r\n          name: 'Color: \"blue\"',\r\n          startIndex: _initialBlueIndex,\r\n          count: _initialBlueCount\r\n        }\r\n      ],\r\n      showItemIndexInView: false,\r\n      isCompactMode: false\r\n    };\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.showItemIndexInView) {\r\n      const itemIndexInView = this._root.current!.getStartItemIndexInView();\r\n      alert('first item index that was in view: ' + itemIndexInView);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { items, groups, isCompactMode } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className={controlWrapperClass}>\r\n          <DefaultButton onClick={this._addItem} text=\"Add an item\" styles={{ root: { margin: margin } }} />\r\n          <Toggle label=\"Compact mode\" checked={isCompactMode} onChange={this._onChangeCompactMode} styles={toggleStyles} />\r\n          <Toggle\r\n            label=\"Show index of first item in view when unmounting\"\r\n            checked={this.state.showItemIndexInView}\r\n            onChange={this._onShowItemIndexInViewChanged}\r\n            styles={toggleStyles}\r\n          />\r\n        </div>\r\n        <DetailsList\r\n          componentRef={this._root}\r\n          items={items}\r\n          groups={groups}\r\n          columns={_columns}\r\n          ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n          ariaLabelForSelectionColumn=\"Toggle selection\"\r\n          groupProps={{\r\n            showEmptyGroups: true\r\n          }}\r\n          onRenderItemColumn={this._onRenderColumn}\r\n          compact={isCompactMode}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _addItem = (): void => {\r\n    const items = this.state.items;\r\n    const groups = [...this.state.groups];\r\n    groups[_blueGroupIndex].count++;\r\n\r\n    this.setState(\r\n      {\r\n        items: items.concat([\r\n          {\r\n            key: 'item-' + items.length,\r\n            name: 'New item ' + items.length,\r\n            color: 'blue'\r\n          }\r\n        ]),\r\n        groups\r\n      },\r\n      () => {\r\n        if (this._root.current) {\r\n          this._root.current.focusIndex(items.length, true);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  private _onRenderColumn(item: IDetailsListGroupedExampleItem, index: number, column: IColumn) {\r\n    const value = item && column && column.fieldName ? item[column.fieldName as keyof IDetailsListGroupedExampleItem] || '' : '';\r\n\r\n    return <div data-is-focusable={true}>{value}</div>;\r\n  }\r\n\r\n  private _onShowItemIndexInViewChanged = (event: React.MouseEvent<HTMLInputElement>, checked: boolean): void => {\r\n    this.setState({ showItemIndexInView: checked });\r\n  };\r\n\r\n  private _onChangeCompactMode = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\r\n    this.setState({ isCompactMode: checked });\r\n  };\r\n}\r\n"]}