{"ast":null,"code":"import { FETCH_GNOMES } from './types';\nexport var fetchGnomes = function fetchGnomes() {\n  fetch('https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json').then(function (res) {\n    return res.json();\n  }).then(function (gnomes) {\n    return {\n      type: \"FECH_GNOMES\",\n      payload: gnomes.Brastlewark\n    };\n  });\n}; //SEARCH FILTERS ACTIONS=================================================\n//Se puede aplicar mas de un filtro a la vez,\n//Por eso necesitamos aplicar estos filtros a la lista que tenemos en state de store\n//tambien ordenamos la lista que retornamos de los filtros, y no la lista original\n\nexport function fetchGnomesFilters() {\n  return function (dispatch) {\n    fetch('https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json').then(function (res) {\n      return res.json();\n    }).then(function (gnomes) {\n      return filterByHairColor(\"Pink\", gnomes.Brastlewark);\n    }).then(function (gnomes) {\n      return dispatch({\n        type: FETCH_GNOMES,\n        payload: gnomes\n      });\n    });\n  };\n} //SEARCH FILTERS FUNCTIONS=================================================\n\nfunction filterByHairColor(hairColor, gnomes) {\n  var gnomesFiltered = [];\n  gnomes.map(function (gnome) {\n    if (gnome.hair_color === hairColor) {\n      gnomesFiltered.push(gnome);\n    }\n  });\n  return gnomesFiltered;\n} //SEARCH SORT==============================================================================","map":{"version":3,"sources":["C:\\Users\\sergi.hurtado\\Desktop\\GnomesRedux\\redux-cra\\src\\js\\actions\\getActions.js"],"names":["FETCH_GNOMES","fetchGnomes","fetch","then","res","json","gnomes","type","payload","Brastlewark","fetchGnomesFilters","dispatch","filterByHairColor","hairColor","gnomesFiltered","map","gnome","hair_color","push"],"mappings":"AAAA,SAAQA,YAAR,QAA4B,SAA5B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzBC,EAAAA,KAAK,CAAC,wEAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADT,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAG;AACX,WAAO;AACHC,MAAAA,IAAI,EAAC,aADF;AAEHC,MAAAA,OAAO,EAAEF,MAAM,CAACG;AAFb,KAAP;AAIP,GAPG;AAQP,CATM,C,CAYP;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,GAA6B;AAChC,SAAO,UAASC,QAAT,EAAkB;AACrBT,IAAAA,KAAK,CAAC,wEAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADT,EAECF,IAFD,CAEM,UAAAG,MAAM;AAAA,aAAIM,iBAAiB,CAAC,MAAD,EAAQN,MAAM,CAACG,WAAf,CAArB;AAAA,KAFZ,EAGCN,IAHD,CAGM,UAAAG,MAAM;AAAA,aACRK,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAACP,YADA;AAELQ,QAAAA,OAAO,EAAEF;AAFJ,OAAD,CADA;AAAA,KAHZ;AAQP,GATG;AAUH,C,CAED;;AACA,SAASM,iBAAT,CAA2BC,SAA3B,EAAsCP,MAAtC,EAA6C;AACzC,MAAIQ,cAAc,GAAG,EAArB;AAEAR,EAAAA,MAAM,CAACS,GAAP,CAAY,UAAAC,KAAK,EAAG;AAChB,QAAGA,KAAK,CAACC,UAAN,KAAqBJ,SAAxB,EAAkC;AAC9BC,MAAAA,cAAc,CAACI,IAAf,CAAoBF,KAApB;AACH;AACJ,GAJD;AAMA,SAAOF,cAAP;AACH,C,CAED","sourcesContent":["import{ FETCH_GNOMES } from './types';\r\n\r\nexport const fetchGnomes = () => {\r\n        fetch('https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json')\r\n        .then(res => res.json())\r\n        .then(gnomes =>{\r\n            return {\r\n                type:\"FECH_GNOMES\",\r\n                payload: gnomes.Brastlewark\r\n            }\r\n    });\r\n}\r\n\r\n\r\n//SEARCH FILTERS ACTIONS=================================================\r\n//Se puede aplicar mas de un filtro a la vez,\r\n//Por eso necesitamos aplicar estos filtros a la lista que tenemos en state de store\r\n//tambien ordenamos la lista que retornamos de los filtros, y no la lista original\r\nexport function fetchGnomesFilters(){\r\n    return function(dispatch){\r\n        fetch('https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json')\r\n        .then(res => res.json())\r\n        .then(gnomes => filterByHairColor(\"Pink\",gnomes.Brastlewark))\r\n        .then(gnomes =>\r\n            dispatch({\r\n                type:FETCH_GNOMES,\r\n                payload: gnomes\r\n            }));\r\n}\r\n}\r\n\r\n//SEARCH FILTERS FUNCTIONS=================================================\r\nfunction filterByHairColor(hairColor, gnomes){\r\n    var gnomesFiltered = [];\r\n\r\n    gnomes.map((gnome =>{\r\n        if(gnome.hair_color === hairColor){\r\n            gnomesFiltered.push(gnome);\r\n        }\r\n    }));\r\n\r\n    return gnomesFiltered;\r\n}\r\n\r\n//SEARCH SORT=============================================================================="]},"metadata":{},"sourceType":"module"}