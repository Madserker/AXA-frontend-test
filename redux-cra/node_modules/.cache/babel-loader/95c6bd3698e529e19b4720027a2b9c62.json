{"ast":null,"code":"import { resolve } from \"react-resolve\";\nvar api = \"https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json\";\nexport function loaded() {\n  return function (dispatch) {\n    dispatch({\n      type: \"LOADED\",\n      payload: false\n    });\n  };\n}\nexport function resetList() {\n  return function (dispatch) {\n    dispatch({\n      type: \"RESET\",\n      payload: true\n    });\n  };\n}\nexport function fetchGnomes() {\n  return function (dispatch) {\n    fetch(api).then(function (res) {\n      return res.json();\n    }).then(function (gnomes) {\n      return dispatch({\n        type: \"FETCH_GNOMES\",\n        payload: gnomes.Brastlewark\n      });\n    });\n  };\n}\nexport function getGnomeInfo(id) {\n  return function (dispatch) {\n    fetch(api).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return json.Brastlewark;\n    }).then(function (gnomes) {\n      return gnomes.map(function (gnome) {\n        if (gnome.id == id) {\n          console.log(gnome);\n          dispatch({\n            type: \"GET_GNOME\",\n            payload: gnome\n          });\n          resolve();\n        }\n      });\n    });\n  };\n}\nexport function fetchGnomesFilters(hairFilters, professionFilters, age, weight, height, gnomes) {\n  return function (dispatch) {\n    fetchGnomesHairFilters(hairFilters, gnomes).then(function (gnomesf) {\n      fetchGnomesProfessionFilters(professionFilters, gnomesf).then(function (gnomesff) {\n        fetchGnomesAgeFilters(age, gnomesff).then(function (gnomesfff) {\n          fetchGnomesWeightFilters(weight, gnomesfff).then(function (gnomesffff) {\n            fetchGnomesHeightFilters(height, gnomesffff).then(function (gnomesfffff) {\n              dispatch({\n                type: \"FETCH_GNOMES_FILTERS\",\n                payload: gnomesfffff\n              });\n            });\n          });\n        });\n      });\n    });\n  };\n}\nexport function search(input, gnomes) {\n  return function (dispatch) {\n    console.log(input);\n    searchGnomes(input, gnomes).then(function (gnomesf) {\n      dispatch({\n        type: \"FETCH_GNOMES_FILTERS\",\n        payload: gnomesf\n      });\n    });\n  };\n} //SEARCH FILTERS ACTIONS=================================================\n//Se puede aplicar mas de un filtro a la vez,\n//Por eso necesitamos aplicar estos filtros a la lista que tenemos en state de store\n//tambien ordenamos la lista que retornamos de los filtros, y no la lista original\n\nfunction fetchGnomesHairFilters(hairFilters, gnomes) {\n  if (hairFilters.length == 0) {\n    return new Promise(function (resolve, reject) {\n      resolve(gnomes);\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    var gnomesFiltered = [];\n    var promises = hairFilters.map(function (hair) {\n      return filterByHairColor(hair, gnomes).then(function (gnomes) {\n        return gnomes.map(function (gnome) {\n          gnomesFiltered.push(gnome);\n        });\n      });\n    });\n    resolve(gnomesFiltered);\n  });\n}\n\nfunction fetchGnomesProfessionFilters(professionFilters, gnomes) {\n  if (professionFilters.length == 0) {\n    return new Promise(function (resolve, reject) {\n      resolve(gnomes);\n    });\n  }\n\n  return new Promise(function (resolve, reject) {\n    var gnomesFiltered = [];\n    var promises = professionFilters.map(function (profession) {\n      return filterByProfession(profession, gnomes).then(function (gnomes) {\n        return gnomes.map(function (gnome) {\n          gnomesFiltered.push(gnome);\n        });\n      });\n    });\n    resolve(gnomesFiltered); // dispatch({\n    //     type:\"FETCH_GNOMES\",\n    //     payload: gnomesFiltered\n    // })\n  });\n}\n\nfunction fetchGnomesAgeFilters(age, gnomes) {\n  return new Promise(function (resolve, reject) {\n    var gnomesFiltered = [];\n    gnomes.map(function (gnome) {\n      if (gnome.age > age) {\n        gnomesFiltered.push(gnome);\n      }\n    });\n    resolve(gnomesFiltered);\n  });\n}\n\nfunction fetchGnomesWeightFilters(weight, gnomes) {\n  return new Promise(function (resolve, reject) {\n    var gnomesFiltered = [];\n    gnomes.map(function (gnome) {\n      if (gnome.weight > weight) {\n        gnomesFiltered.push(gnome);\n      }\n    });\n    resolve(gnomesFiltered);\n  });\n}\n\nfunction fetchGnomesHeightFilters(height, gnomes) {\n  return new Promise(function (resolve, reject) {\n    var gnomesFiltered = [];\n    gnomes.map(function (gnome) {\n      if (gnome.height > height) {\n        gnomesFiltered.push(gnome);\n      }\n    });\n    resolve(gnomesFiltered);\n  });\n} //SEARCH FILTERS FUNCTIONS=================================================\n\n\nfunction filterByHairColor(hairColor, gnomes) {\n  return new Promise(function (resolve, reject) {\n    var gnomesFiltered = [];\n    gnomes.map(function (gnome) {\n      if (gnome.hair_color === hairColor) {\n        console.log(\"water\");\n        gnomesFiltered.push(gnome);\n      }\n    });\n    resolve(gnomesFiltered);\n  });\n}\n\nfunction filterByProfession(profession, gnomes) {\n  return new Promise(function (resolve, reject) {\n    var gnomesFiltered = [];\n    gnomes.map(function (gnome) {\n      gnome.professions.map(function (professionG) {\n        if (professionG == profession) {\n          console.log(\"wind\");\n          gnomesFiltered.push(gnome);\n        }\n      });\n    });\n    resolve(gnomesFiltered);\n  });\n}\n\nfunction searchGnomes(input, gnomes) {\n  return new Promise(function (resolve, reject) {\n    var gnomesFiltered = [];\n    gnomes.map(function (gnome) {\n      if (gnome.name.includes(input)) {\n        gnomesFiltered.push(gnome);\n      }\n    });\n    resolve(gnomesFiltered);\n  });\n} //SEARCH SORT==============================================================================","map":{"version":3,"sources":["C:\\Users\\sergi.hurtado\\Desktop\\Back master up\\GnomesRedux\\redux-cra\\src\\js\\actions\\getActions.js"],"names":["resolve","api","loaded","dispatch","type","payload","resetList","fetchGnomes","fetch","then","res","json","gnomes","Brastlewark","getGnomeInfo","id","map","gnome","console","log","fetchGnomesFilters","hairFilters","professionFilters","age","weight","height","fetchGnomesHairFilters","gnomesf","fetchGnomesProfessionFilters","gnomesff","fetchGnomesAgeFilters","gnomesfff","fetchGnomesWeightFilters","gnomesffff","fetchGnomesHeightFilters","gnomesfffff","search","input","searchGnomes","length","Promise","reject","gnomesFiltered","promises","hair","filterByHairColor","push","profession","filterByProfession","hairColor","hair_color","professions","professionG","name","includes"],"mappings":"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","sourcesContent":["import {resolve} from \"react-resolve\"\r\nvar api = \"https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json\";\r\n\r\nexport function loaded(){\r\n    return function(dispatch){\r\n            dispatch({\r\n                type:\"LOADED\",\r\n                payload: false\r\n            })\r\n    }\r\n}\r\n\r\nexport function resetList(){\r\n    return function(dispatch){\r\n            dispatch({\r\n                type:\"RESET\",\r\n                payload: true\r\n            })\r\n    }\r\n}\r\n\r\nexport function fetchGnomes(){\r\n    return function(dispatch){\r\n        fetch(api)\r\n        .then(res => res.json())\r\n        .then(gnomes =>\r\n            dispatch({\r\n                type:\"FETCH_GNOMES\",\r\n                payload: gnomes.Brastlewark\r\n            }));\r\n    }\r\n}\r\n\r\nexport function getGnomeInfo(id){\r\n    return function(dispatch){\r\n        fetch(api)\r\n        .then(res => res.json())\r\n        .then(json => json.Brastlewark)\r\n        .then(gnomes=> gnomes.map((gnome) => {\r\n            if(gnome.id==id){\r\n                console.log(gnome);\r\n                dispatch({\r\n                    type:\"GET_GNOME\",\r\n                    payload: gnome\r\n                })\r\n                resolve()\r\n            }\r\n        }))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function fetchGnomesFilters(hairFilters,professionFilters,age,weight,height,gnomes){\r\n    return function(dispatch){   \r\n        fetchGnomesHairFilters(hairFilters,gnomes).then(\r\n            gnomesf => {\r\n                fetchGnomesProfessionFilters(professionFilters, gnomesf).then(\r\n                    gnomesff=>{\r\n                        fetchGnomesAgeFilters(age,gnomesff).then(\r\n                            gnomesfff=>{\r\n                                fetchGnomesWeightFilters(weight,gnomesfff).then(\r\n                                    gnomesffff=>{\r\n                                        fetchGnomesHeightFilters(height,gnomesffff).then(\r\n                                            gnomesfffff=>{\r\n                                                dispatch({\r\n                                                    type:\"FETCH_GNOMES_FILTERS\",\r\n                                                    payload: gnomesfffff\r\n                                                })\r\n                                            })\r\n                                    })\r\n                            }\r\n\r\n                        )\r\n\r\n                    }\r\n\r\n                    )\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport function search(input,gnomes){\r\n    return function(dispatch){  \r\n        console.log(input)\r\n        searchGnomes(input,gnomes).then(\r\n            gnomesf=>{\r\n                dispatch({\r\n                    type:\"FETCH_GNOMES_FILTERS\",\r\n                    payload: gnomesf\r\n                })\r\n            }\r\n        ) \r\n    }\r\n}\r\n\r\n\r\n\r\n//SEARCH FILTERS ACTIONS=================================================\r\n//Se puede aplicar mas de un filtro a la vez,\r\n//Por eso necesitamos aplicar estos filtros a la lista que tenemos en state de store\r\n//tambien ordenamos la lista que retornamos de los filtros, y no la lista original\r\nfunction fetchGnomesHairFilters(hairFilters,gnomes){  \r\n    if(hairFilters.length==0){return new Promise(function(resolve,reject){resolve(gnomes)})} \r\n    return new Promise(function (resolve, reject){ \r\n        var gnomesFiltered = [];        \r\n        const promises = hairFilters.map(hair=>\r\n            filterByHairColor(hair,gnomes)\r\n            .then(gnomes => gnomes.map(gnome=>{gnomesFiltered.push(gnome)})));\r\n         resolve(gnomesFiltered);\r\n        });\r\n    }\r\n\r\nfunction fetchGnomesProfessionFilters(professionFilters,gnomes){  \r\n    if(professionFilters.length==0){return new Promise(function(resolve,reject){resolve(gnomes)})}  \r\n    return new Promise(function (resolve, reject){  \r\n        var gnomesFiltered = [];        \r\n        const promises = professionFilters.map(profession=>\r\n            filterByProfession(profession,gnomes)\r\n            .then(gnomes => gnomes.map(\r\n                gnome=>{gnomesFiltered.push(gnome)}\r\n            )));\r\n        resolve(gnomesFiltered);\r\n            // dispatch({\r\n            //     type:\"FETCH_GNOMES\",\r\n            //     payload: gnomesFiltered\r\n            // })\r\n        });      \r\n    \r\n}\r\n\r\nfunction fetchGnomesAgeFilters(age,gnomes){  \r\n    return new Promise(function (resolve, reject){  \r\n        var gnomesFiltered = [];        \r\n        gnomes.map(gnome=>{\r\n            if(gnome.age>age){\r\n                gnomesFiltered.push(gnome)\r\n            }\r\n        })\r\n        resolve(gnomesFiltered);\r\n        });      \r\n    \r\n}\r\n\r\nfunction fetchGnomesWeightFilters(weight,gnomes){  \r\n    return new Promise(function (resolve, reject){  \r\n        var gnomesFiltered = [];        \r\n        gnomes.map(gnome=>{\r\n            if(gnome.weight>weight){\r\n                gnomesFiltered.push(gnome)\r\n            }\r\n        })\r\n        resolve(gnomesFiltered);\r\n        });      \r\n    \r\n}\r\n\r\nfunction fetchGnomesHeightFilters(height,gnomes){  \r\n    return new Promise(function (resolve, reject){  \r\n        var gnomesFiltered = [];        \r\n        gnomes.map(gnome=>{\r\n            if(gnome.height>height){\r\n                gnomesFiltered.push(gnome)\r\n            }\r\n        })\r\n        resolve(gnomesFiltered);\r\n        });      \r\n    \r\n}\r\n\r\n//SEARCH FILTERS FUNCTIONS=================================================\r\nfunction filterByHairColor(hairColor, gnomes){\r\n    return new Promise(function(resolve, reject){\r\n        var gnomesFiltered = [];\r\n        gnomes.map((gnome =>{\r\n            if(gnome.hair_color === hairColor){\r\n                console.log(\"water\")\r\n                gnomesFiltered.push(gnome);\r\n            }\r\n        }));\r\n\r\n         resolve(gnomesFiltered);\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction filterByProfession(profession, gnomes){\r\n    return new Promise(function(resolve, reject){\r\n    var gnomesFiltered = [];\r\n\r\n    gnomes.map((gnome =>{\r\n        gnome.professions.map(professionG => {\r\n            if(professionG == profession){\r\n                console.log(\"wind\")\r\n                gnomesFiltered.push(gnome);\r\n            }\r\n        }\r\n\r\n            )\r\n\r\n\r\n    }));\r\n\r\n     resolve(gnomesFiltered);\r\n});\r\n    \r\n}\r\n\r\n\r\n\r\nfunction searchGnomes(input, gnomes){\r\n    return new Promise(function(resolve, reject){\r\n        var gnomesFiltered = [];\r\n        gnomes.map((gnome =>{\r\n            if(gnome.name.includes(input)){\r\n                gnomesFiltered.push(gnome);\r\n            }\r\n        }));\r\n\r\n         resolve(gnomesFiltered);\r\n    });\r\n}\r\n\r\n//SEARCH SORT=============================================================================="]},"metadata":{},"sourceType":"module"}